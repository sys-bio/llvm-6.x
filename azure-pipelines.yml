trigger:
  - release/6.x
  - ciaran

stages:
  - stage: 
    jobs:
      - job: BuildLLVMLinux
        timeoutInMinutes: "0"
        displayName: Linux
        continueOnError: "false"
        pool:
          vmImage: "ubuntu-18.04"
        variables:
          CCACHE_DIR: '$(Pipeline.Workspace)/ccache'
          SOURCE_DIRECTORY: '$(System.DefaultWorkingDirectory)'
          BUILD_DIRECTORY: '$(System.DefaultWorkingDirectory)/build'
          INSTALL_DIRECTORY: '$(System.DefaultWorkingDirectory)/install-azure'
        strategy:
          matrix:
            64-bit Linux Release: 
              BuildType: Release
            64-bit Linux RelWithDebInfo:
              BuildType: RelWithDebInfo
        steps:
          - script: |
              echo "Default directory: $(pwd)"
              echo "Agent.BuildDirectory $(Agent.BuildDirectory)"
              echo "Pipeline.Workspace $(Pipeline.Workspace)"
              echo "System.DefaultWorkingDirectory $(System.DefaultWorkingDirectory)"
              echo "SOURCE_DIRECORY $(SOURCE_DIRECORY)"
              echo "BUILD_DIRECTORY $(BUILD_DIRECTORY)"
              echo "INSTALL_DIRECTORY $(INSTALL_DIRECTORY)"
              echo "Agent.OS $(Agent.OS)"
          - script: |
              echo "CD to BUILD_DIRECTORY: $(BUILD_DIRECTORY)"

              if [ ! -d $(BUILD_DIRECTORY) ]
                then 
                  mkdir -p $(BUILD_DIRECTORY)
              fi 

              cd $(BUILD_DIRECTORY)
              echo "pwd: $(pwd)"
              echo "Configuring CMake"
              cmake -DCMAKE_BUILD_TYPE=$(BuildType) -DCMAKE_INSTALL_PREFIX=$(INSTALL_DIRECTORY)/$(BuildType) -DLLVM_OPTIMIZED_TABLEGEN=ON ..
              cmake --build . --target install --config $(BuildType)
          - task: CopyFiles@2
            inputs:
              contents: '$(INSTALL_DIRECTORY)/$(BuildType)'
              targetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: LLVM-6.x-x64-gcc

      - job: BuildWindowsWindows
        timeoutInMinutes: "0"
        displayName: Windows
        continueOnError: "false"
        pool:
          vmImage: "windows-2019"
        variables:
          CCACHE_DIR: '$(Pipeline.Workspace)/ccache'
          SOURCE_DIRECTORY: '$(System.DefaultWorkingDirectory)'
          BUILD_DIRECTORY: '$(SOURCE_DIRECTORY)\build'
          INSTALL_DIRECTORY: '$(SOURCE_DIRECTORY)\install-azure'
        strategy:
          matrix:
            64-bit Windows Release: 
              BuildType: Release
            64-bit Windows RelWithDebInfo:
              BuildType: RelWithDebInfo
        steps:
          - script: |
              echo "CD to BUILD_DIRECTORY: $(BUILD_DIRECTORY)"
              mkdir $(BUILD_DIRECTORY)
              cd $(BUILD_DIRECTORY)
              echo "pwd: $(pwd)"
              echo "Configuring CMake with: cmake -DCMAKE_BUILD_TYPE=$(BuildType) -Thost=x64 -DCMAKE_INSTALL_PREFIX=\"$(INSTALL_DIRECTORY)\$(BuildType)\" -DLLVM_OPTIMIZED_TABLEGEN=OFF  .."
              cmake -DCMAKE_BUILD_TYPE=$(BuildType) -Thost=x64 -DCMAKE_INSTALL_PREFIX="$(INSTALL_DIRECTORY)\$(BuildType)" -DLLVM_OPTIMIZED_TABLEGEN=ON  ..
              cmake --build . --target install --config $(BuildType)
                    
          - task: CopyFiles@2
            inputs:
              contents: '$(INSTALL_DIRECTORY)/$(BuildType)'
              targetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: LLVM-6.x-x64-msvc2019
            
      - job: BuildLLVMMacOs
        timeoutInMinutes: "0"
        displayName: Mac
        continueOnError: "false"
        pool:
          vmImage: 'macOS-10.15'
        variables:
          CCACHE_DIR: '$(Pipeline.Workspace)/ccache'
          BUILD_DIRECTORY: '$(System.DefaultWorkingDirectory)/build'
          SOURCE_DIRECTORY: '$(System.DefaultWorkingDirectory)'
          INSTALL_DIRECTORY: '$(System.DefaultWorkingDirectory)/install-azure'
        strategy:
          matrix:
            64-bit Mac Release: 
              BuildType: Release
              CMakeArgs: "-DCMAKE_INSTALL_PREFIX=$(INSTALL_DIRECTORY)/release"
            64-bit Mac Debug: 
              BuildType: Debug
              CMakeArgs: "-DCMAKE_INSTALL_PREFIX=$(INSTALL_DIRECTORY)/debug"
        steps:
          - script: |
              echo "CD to BUILD_DIRECTORY: $(BUILD_DIRECTORY)"
              if [ ! -d $(BUILD_DIRECTORY) ]
                then 
                  mkdir -p $(BUILD_DIRECTORY)
              fi 
              cd $(BUILD_DIRECTORY)
              echo "pwd: $(pwd)"
              echo "Configuring CMake"
              cmake -DCMAKE_BUILD_TYPE=$(BuildType) -DCMAKE_INSTALL_PREFIX="$(INSTALL_DIRECTORY)/$(BuildType)" -DLLVM_OPTIMIZED_TABLEGEN=ON ..
              cmake --build . --target install --config $(BuildType)
          - task: CopyFiles@2
            inputs:
              contents: '$(INSTALL_DIRECTORY)/$(BuildType)'
              targetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: LLVM-6.x-x64-clang

